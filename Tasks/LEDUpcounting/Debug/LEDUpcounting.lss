
LEDUpcounting.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000004ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000496  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000051c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d1c  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000be0  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b0  00000000  00000000  00001e78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00002228  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000054a  00000000  00000000  0000225c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000047  00000000  00000000  000027a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	cd c1       	rjmp	.+922    	; 0x492 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include <util/delay.h>

#define buttonState			(PINJ & (1<<7))

int main(void)
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	62 97       	sbiw	r28, 0x12	; 18
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	f8 94       	cli
 108:	de bf       	out	0x3e, r29	; 62
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	cd bf       	out	0x3d, r28	; 61
    /* INITIALIZATION */
	
	// LED Port
	DDRA = 0xFF;			// 1= Output, 0= Input
 10e:	81 e2       	ldi	r24, 0x21	; 33
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	fc 01       	movw	r30, r24
 116:	20 83       	st	Z, r18
	// Button Port
	DDRJ = 0x00;			// 1= Output, 0= Input
 118:	84 e0       	ldi	r24, 0x04	; 4
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	fc 01       	movw	r30, r24
 11e:	10 82       	st	Z, r1
	
	int ledCount = 7;
 120:	87 e0       	ldi	r24, 0x07	; 7
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	9a 83       	std	Y+2, r25	; 0x02
 126:	89 83       	std	Y+1, r24	; 0x01
	int currentButtonState = 0;
 128:	1c 82       	std	Y+4, r1	; 0x04
 12a:	1b 82       	std	Y+3, r1	; 0x03

	PORTA = 0x00;			// sets LEDs to 0 by default
 12c:	82 e2       	ldi	r24, 0x22	; 34
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	fc 01       	movw	r30, r24
 132:	10 82       	st	Z, r1
    
	while (1) 
    {
		if (buttonState){
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	fc 01       	movw	r30, r24
 13a:	80 81       	ld	r24, Z
 13c:	88 23       	and	r24, r24
 13e:	0c f0       	brlt	.+2      	; 0x142 <main+0x48>
 140:	99 c0       	rjmp	.+306    	; 0x274 <main+0x17a>
			if (!currentButtonState){					
 142:	8b 81       	ldd	r24, Y+3	; 0x03
 144:	9c 81       	ldd	r25, Y+4	; 0x04
 146:	89 2b       	or	r24, r25
 148:	41 f5       	brne	.+80     	; 0x19a <main+0xa0>
				currentButtonState = 1;
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	9c 83       	std	Y+4, r25	; 0x04
 150:	8b 83       	std	Y+3, r24	; 0x03
				if (ledCount >= 0){
 152:	89 81       	ldd	r24, Y+1	; 0x01
 154:	9a 81       	ldd	r25, Y+2	; 0x02
 156:	99 23       	and	r25, r25
 158:	c4 f0       	brlt	.+48     	; 0x18a <main+0x90>
					PORTA |=(1<<ledCount);			// sets next LED to 1 
 15a:	82 e2       	ldi	r24, 0x22	; 34
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	22 e2       	ldi	r18, 0x22	; 34
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	f9 01       	movw	r30, r18
 164:	20 81       	ld	r18, Z
 166:	42 2f       	mov	r20, r18
 168:	21 e0       	ldi	r18, 0x01	; 1
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	09 80       	ldd	r0, Y+1	; 0x01
 16e:	02 c0       	rjmp	.+4      	; 0x174 <main+0x7a>
 170:	22 0f       	add	r18, r18
 172:	33 1f       	adc	r19, r19
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <main+0x76>
 178:	24 2b       	or	r18, r20
 17a:	fc 01       	movw	r30, r24
 17c:	20 83       	st	Z, r18
					ledCount--;
 17e:	89 81       	ldd	r24, Y+1	; 0x01
 180:	9a 81       	ldd	r25, Y+2	; 0x02
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	9a 83       	std	Y+2, r25	; 0x02
 186:	89 83       	std	Y+1, r24	; 0x01
 188:	08 c0       	rjmp	.+16     	; 0x19a <main+0xa0>
				}
				else {
					PORTA = 0x00;					// sets all LEDs to 0 after last LED
 18a:	82 e2       	ldi	r24, 0x22	; 34
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	fc 01       	movw	r30, r24
 190:	10 82       	st	Z, r1
					ledCount = 7;
 192:	87 e0       	ldi	r24, 0x07	; 7
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	9a 83       	std	Y+2, r25	; 0x02
 198:	89 83       	std	Y+1, r24	; 0x01
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	a8 ec       	ldi	r26, 0xC8	; 200
 1a0:	b2 e4       	ldi	r27, 0x42	; 66
 1a2:	8d 83       	std	Y+5, r24	; 0x05
 1a4:	9e 83       	std	Y+6, r25	; 0x06
 1a6:	af 83       	std	Y+7, r26	; 0x07
 1a8:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	4a ef       	ldi	r20, 0xFA	; 250
 1b0:	54 e4       	ldi	r21, 0x44	; 68
 1b2:	6d 81       	ldd	r22, Y+5	; 0x05
 1b4:	7e 81       	ldd	r23, Y+6	; 0x06
 1b6:	8f 81       	ldd	r24, Y+7	; 0x07
 1b8:	98 85       	ldd	r25, Y+8	; 0x08
 1ba:	e0 d0       	rcall	.+448    	; 0x37c <__mulsf3>
 1bc:	dc 01       	movw	r26, r24
 1be:	cb 01       	movw	r24, r22
 1c0:	89 87       	std	Y+9, r24	; 0x09
 1c2:	9a 87       	std	Y+10, r25	; 0x0a
 1c4:	ab 87       	std	Y+11, r26	; 0x0b
 1c6:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	40 e8       	ldi	r20, 0x80	; 128
 1ce:	5f e3       	ldi	r21, 0x3F	; 63
 1d0:	69 85       	ldd	r22, Y+9	; 0x09
 1d2:	7a 85       	ldd	r23, Y+10	; 0x0a
 1d4:	8b 85       	ldd	r24, Y+11	; 0x0b
 1d6:	9c 85       	ldd	r25, Y+12	; 0x0c
 1d8:	50 d0       	rcall	.+160    	; 0x27a <__cmpsf2>
 1da:	88 23       	and	r24, r24
 1dc:	2c f4       	brge	.+10     	; 0x1e8 <main+0xee>
		__ticks = 1;
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	9e 87       	std	Y+14, r25	; 0x0e
 1e4:	8d 87       	std	Y+13, r24	; 0x0d
 1e6:	3b c0       	rjmp	.+118    	; 0x25e <main+0x164>
	else if (__tmp > 65535)
 1e8:	20 e0       	ldi	r18, 0x00	; 0
 1ea:	3f ef       	ldi	r19, 0xFF	; 255
 1ec:	4f e7       	ldi	r20, 0x7F	; 127
 1ee:	57 e4       	ldi	r21, 0x47	; 71
 1f0:	69 85       	ldd	r22, Y+9	; 0x09
 1f2:	7a 85       	ldd	r23, Y+10	; 0x0a
 1f4:	8b 85       	ldd	r24, Y+11	; 0x0b
 1f6:	9c 85       	ldd	r25, Y+12	; 0x0c
 1f8:	bd d0       	rcall	.+378    	; 0x374 <__gesf2>
 1fa:	18 16       	cp	r1, r24
 1fc:	3c f5       	brge	.+78     	; 0x24c <main+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	40 e2       	ldi	r20, 0x20	; 32
 204:	51 e4       	ldi	r21, 0x41	; 65
 206:	6d 81       	ldd	r22, Y+5	; 0x05
 208:	7e 81       	ldd	r23, Y+6	; 0x06
 20a:	8f 81       	ldd	r24, Y+7	; 0x07
 20c:	98 85       	ldd	r25, Y+8	; 0x08
 20e:	b6 d0       	rcall	.+364    	; 0x37c <__mulsf3>
 210:	dc 01       	movw	r26, r24
 212:	cb 01       	movw	r24, r22
 214:	bc 01       	movw	r22, r24
 216:	cd 01       	movw	r24, r26
 218:	34 d0       	rcall	.+104    	; 0x282 <__fixunssfsi>
 21a:	dc 01       	movw	r26, r24
 21c:	cb 01       	movw	r24, r22
 21e:	9e 87       	std	Y+14, r25	; 0x0e
 220:	8d 87       	std	Y+13, r24	; 0x0d
 222:	0f c0       	rjmp	.+30     	; 0x242 <main+0x148>
 224:	88 ec       	ldi	r24, 0xC8	; 200
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	98 8b       	std	Y+16, r25	; 0x10
 22a:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 22c:	8f 85       	ldd	r24, Y+15	; 0x0f
 22e:	98 89       	ldd	r25, Y+16	; 0x10
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <main+0x136>
 234:	98 8b       	std	Y+16, r25	; 0x10
 236:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 238:	8d 85       	ldd	r24, Y+13	; 0x0d
 23a:	9e 85       	ldd	r25, Y+14	; 0x0e
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	9e 87       	std	Y+14, r25	; 0x0e
 240:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 242:	8d 85       	ldd	r24, Y+13	; 0x0d
 244:	9e 85       	ldd	r25, Y+14	; 0x0e
 246:	89 2b       	or	r24, r25
 248:	69 f7       	brne	.-38     	; 0x224 <main+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 24a:	16 c0       	rjmp	.+44     	; 0x278 <main+0x17e>
 24c:	69 85       	ldd	r22, Y+9	; 0x09
 24e:	7a 85       	ldd	r23, Y+10	; 0x0a
 250:	8b 85       	ldd	r24, Y+11	; 0x0b
 252:	9c 85       	ldd	r25, Y+12	; 0x0c
 254:	16 d0       	rcall	.+44     	; 0x282 <__fixunssfsi>
 256:	dc 01       	movw	r26, r24
 258:	cb 01       	movw	r24, r22
 25a:	9e 87       	std	Y+14, r25	; 0x0e
 25c:	8d 87       	std	Y+13, r24	; 0x0d
 25e:	8d 85       	ldd	r24, Y+13	; 0x0d
 260:	9e 85       	ldd	r25, Y+14	; 0x0e
 262:	9a 8b       	std	Y+18, r25	; 0x12
 264:	89 8b       	std	Y+17, r24	; 0x11
 266:	89 89       	ldd	r24, Y+17	; 0x11
 268:	9a 89       	ldd	r25, Y+18	; 0x12
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <main+0x170>
 26e:	9a 8b       	std	Y+18, r25	; 0x12
 270:	89 8b       	std	Y+17, r24	; 0x11
 272:	60 cf       	rjmp	.-320    	; 0x134 <main+0x3a>
			}
			_delay_ms(100);
			
		}
		else {
			currentButtonState = 0;
 274:	1c 82       	std	Y+4, r1	; 0x04
 276:	1b 82       	std	Y+3, r1	; 0x03
		}
		
    }
 278:	5d cf       	rjmp	.-326    	; 0x134 <main+0x3a>

0000027a <__cmpsf2>:
 27a:	2f d0       	rcall	.+94     	; 0x2da <__fp_cmp>
 27c:	08 f4       	brcc	.+2      	; 0x280 <__cmpsf2+0x6>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	08 95       	ret

00000282 <__fixunssfsi>:
 282:	57 d0       	rcall	.+174    	; 0x332 <__fp_splitA>
 284:	88 f0       	brcs	.+34     	; 0x2a8 <__fixunssfsi+0x26>
 286:	9f 57       	subi	r25, 0x7F	; 127
 288:	90 f0       	brcs	.+36     	; 0x2ae <__fixunssfsi+0x2c>
 28a:	b9 2f       	mov	r27, r25
 28c:	99 27       	eor	r25, r25
 28e:	b7 51       	subi	r27, 0x17	; 23
 290:	a0 f0       	brcs	.+40     	; 0x2ba <__fixunssfsi+0x38>
 292:	d1 f0       	breq	.+52     	; 0x2c8 <__fixunssfsi+0x46>
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	1a f0       	brmi	.+6      	; 0x2a4 <__fixunssfsi+0x22>
 29e:	ba 95       	dec	r27
 2a0:	c9 f7       	brne	.-14     	; 0x294 <__fixunssfsi+0x12>
 2a2:	12 c0       	rjmp	.+36     	; 0x2c8 <__fixunssfsi+0x46>
 2a4:	b1 30       	cpi	r27, 0x01	; 1
 2a6:	81 f0       	breq	.+32     	; 0x2c8 <__fixunssfsi+0x46>
 2a8:	5e d0       	rcall	.+188    	; 0x366 <__fp_zero>
 2aa:	b1 e0       	ldi	r27, 0x01	; 1
 2ac:	08 95       	ret
 2ae:	5b c0       	rjmp	.+182    	; 0x366 <__fp_zero>
 2b0:	67 2f       	mov	r22, r23
 2b2:	78 2f       	mov	r23, r24
 2b4:	88 27       	eor	r24, r24
 2b6:	b8 5f       	subi	r27, 0xF8	; 248
 2b8:	39 f0       	breq	.+14     	; 0x2c8 <__fixunssfsi+0x46>
 2ba:	b9 3f       	cpi	r27, 0xF9	; 249
 2bc:	cc f3       	brlt	.-14     	; 0x2b0 <__fixunssfsi+0x2e>
 2be:	86 95       	lsr	r24
 2c0:	77 95       	ror	r23
 2c2:	67 95       	ror	r22
 2c4:	b3 95       	inc	r27
 2c6:	d9 f7       	brne	.-10     	; 0x2be <__fixunssfsi+0x3c>
 2c8:	3e f4       	brtc	.+14     	; 0x2d8 <__fixunssfsi+0x56>
 2ca:	90 95       	com	r25
 2cc:	80 95       	com	r24
 2ce:	70 95       	com	r23
 2d0:	61 95       	neg	r22
 2d2:	7f 4f       	sbci	r23, 0xFF	; 255
 2d4:	8f 4f       	sbci	r24, 0xFF	; 255
 2d6:	9f 4f       	sbci	r25, 0xFF	; 255
 2d8:	08 95       	ret

000002da <__fp_cmp>:
 2da:	99 0f       	add	r25, r25
 2dc:	00 08       	sbc	r0, r0
 2de:	55 0f       	add	r21, r21
 2e0:	aa 0b       	sbc	r26, r26
 2e2:	e0 e8       	ldi	r30, 0x80	; 128
 2e4:	fe ef       	ldi	r31, 0xFE	; 254
 2e6:	16 16       	cp	r1, r22
 2e8:	17 06       	cpc	r1, r23
 2ea:	e8 07       	cpc	r30, r24
 2ec:	f9 07       	cpc	r31, r25
 2ee:	c0 f0       	brcs	.+48     	; 0x320 <__fp_cmp+0x46>
 2f0:	12 16       	cp	r1, r18
 2f2:	13 06       	cpc	r1, r19
 2f4:	e4 07       	cpc	r30, r20
 2f6:	f5 07       	cpc	r31, r21
 2f8:	98 f0       	brcs	.+38     	; 0x320 <__fp_cmp+0x46>
 2fa:	62 1b       	sub	r22, r18
 2fc:	73 0b       	sbc	r23, r19
 2fe:	84 0b       	sbc	r24, r20
 300:	95 0b       	sbc	r25, r21
 302:	39 f4       	brne	.+14     	; 0x312 <__fp_cmp+0x38>
 304:	0a 26       	eor	r0, r26
 306:	61 f0       	breq	.+24     	; 0x320 <__fp_cmp+0x46>
 308:	23 2b       	or	r18, r19
 30a:	24 2b       	or	r18, r20
 30c:	25 2b       	or	r18, r21
 30e:	21 f4       	brne	.+8      	; 0x318 <__fp_cmp+0x3e>
 310:	08 95       	ret
 312:	0a 26       	eor	r0, r26
 314:	09 f4       	brne	.+2      	; 0x318 <__fp_cmp+0x3e>
 316:	a1 40       	sbci	r26, 0x01	; 1
 318:	a6 95       	lsr	r26
 31a:	8f ef       	ldi	r24, 0xFF	; 255
 31c:	81 1d       	adc	r24, r1
 31e:	81 1d       	adc	r24, r1
 320:	08 95       	ret

00000322 <__fp_split3>:
 322:	57 fd       	sbrc	r21, 7
 324:	90 58       	subi	r25, 0x80	; 128
 326:	44 0f       	add	r20, r20
 328:	55 1f       	adc	r21, r21
 32a:	59 f0       	breq	.+22     	; 0x342 <__fp_splitA+0x10>
 32c:	5f 3f       	cpi	r21, 0xFF	; 255
 32e:	71 f0       	breq	.+28     	; 0x34c <__fp_splitA+0x1a>
 330:	47 95       	ror	r20

00000332 <__fp_splitA>:
 332:	88 0f       	add	r24, r24
 334:	97 fb       	bst	r25, 7
 336:	99 1f       	adc	r25, r25
 338:	61 f0       	breq	.+24     	; 0x352 <__fp_splitA+0x20>
 33a:	9f 3f       	cpi	r25, 0xFF	; 255
 33c:	79 f0       	breq	.+30     	; 0x35c <__fp_splitA+0x2a>
 33e:	87 95       	ror	r24
 340:	08 95       	ret
 342:	12 16       	cp	r1, r18
 344:	13 06       	cpc	r1, r19
 346:	14 06       	cpc	r1, r20
 348:	55 1f       	adc	r21, r21
 34a:	f2 cf       	rjmp	.-28     	; 0x330 <__fp_split3+0xe>
 34c:	46 95       	lsr	r20
 34e:	f1 df       	rcall	.-30     	; 0x332 <__fp_splitA>
 350:	08 c0       	rjmp	.+16     	; 0x362 <__fp_splitA+0x30>
 352:	16 16       	cp	r1, r22
 354:	17 06       	cpc	r1, r23
 356:	18 06       	cpc	r1, r24
 358:	99 1f       	adc	r25, r25
 35a:	f1 cf       	rjmp	.-30     	; 0x33e <__fp_splitA+0xc>
 35c:	86 95       	lsr	r24
 35e:	71 05       	cpc	r23, r1
 360:	61 05       	cpc	r22, r1
 362:	08 94       	sec
 364:	08 95       	ret

00000366 <__fp_zero>:
 366:	e8 94       	clt

00000368 <__fp_szero>:
 368:	bb 27       	eor	r27, r27
 36a:	66 27       	eor	r22, r22
 36c:	77 27       	eor	r23, r23
 36e:	cb 01       	movw	r24, r22
 370:	97 f9       	bld	r25, 7
 372:	08 95       	ret

00000374 <__gesf2>:
 374:	b2 df       	rcall	.-156    	; 0x2da <__fp_cmp>
 376:	08 f4       	brcc	.+2      	; 0x37a <__gesf2+0x6>
 378:	8f ef       	ldi	r24, 0xFF	; 255
 37a:	08 95       	ret

0000037c <__mulsf3>:
 37c:	0b d0       	rcall	.+22     	; 0x394 <__mulsf3x>
 37e:	78 c0       	rjmp	.+240    	; 0x470 <__fp_round>
 380:	69 d0       	rcall	.+210    	; 0x454 <__fp_pscA>
 382:	28 f0       	brcs	.+10     	; 0x38e <__mulsf3+0x12>
 384:	6e d0       	rcall	.+220    	; 0x462 <__fp_pscB>
 386:	18 f0       	brcs	.+6      	; 0x38e <__mulsf3+0x12>
 388:	95 23       	and	r25, r21
 38a:	09 f0       	breq	.+2      	; 0x38e <__mulsf3+0x12>
 38c:	5a c0       	rjmp	.+180    	; 0x442 <__fp_inf>
 38e:	5f c0       	rjmp	.+190    	; 0x44e <__fp_nan>
 390:	11 24       	eor	r1, r1
 392:	ea cf       	rjmp	.-44     	; 0x368 <__fp_szero>

00000394 <__mulsf3x>:
 394:	c6 df       	rcall	.-116    	; 0x322 <__fp_split3>
 396:	a0 f3       	brcs	.-24     	; 0x380 <__mulsf3+0x4>

00000398 <__mulsf3_pse>:
 398:	95 9f       	mul	r25, r21
 39a:	d1 f3       	breq	.-12     	; 0x390 <__mulsf3+0x14>
 39c:	95 0f       	add	r25, r21
 39e:	50 e0       	ldi	r21, 0x00	; 0
 3a0:	55 1f       	adc	r21, r21
 3a2:	62 9f       	mul	r22, r18
 3a4:	f0 01       	movw	r30, r0
 3a6:	72 9f       	mul	r23, r18
 3a8:	bb 27       	eor	r27, r27
 3aa:	f0 0d       	add	r31, r0
 3ac:	b1 1d       	adc	r27, r1
 3ae:	63 9f       	mul	r22, r19
 3b0:	aa 27       	eor	r26, r26
 3b2:	f0 0d       	add	r31, r0
 3b4:	b1 1d       	adc	r27, r1
 3b6:	aa 1f       	adc	r26, r26
 3b8:	64 9f       	mul	r22, r20
 3ba:	66 27       	eor	r22, r22
 3bc:	b0 0d       	add	r27, r0
 3be:	a1 1d       	adc	r26, r1
 3c0:	66 1f       	adc	r22, r22
 3c2:	82 9f       	mul	r24, r18
 3c4:	22 27       	eor	r18, r18
 3c6:	b0 0d       	add	r27, r0
 3c8:	a1 1d       	adc	r26, r1
 3ca:	62 1f       	adc	r22, r18
 3cc:	73 9f       	mul	r23, r19
 3ce:	b0 0d       	add	r27, r0
 3d0:	a1 1d       	adc	r26, r1
 3d2:	62 1f       	adc	r22, r18
 3d4:	83 9f       	mul	r24, r19
 3d6:	a0 0d       	add	r26, r0
 3d8:	61 1d       	adc	r22, r1
 3da:	22 1f       	adc	r18, r18
 3dc:	74 9f       	mul	r23, r20
 3de:	33 27       	eor	r19, r19
 3e0:	a0 0d       	add	r26, r0
 3e2:	61 1d       	adc	r22, r1
 3e4:	23 1f       	adc	r18, r19
 3e6:	84 9f       	mul	r24, r20
 3e8:	60 0d       	add	r22, r0
 3ea:	21 1d       	adc	r18, r1
 3ec:	82 2f       	mov	r24, r18
 3ee:	76 2f       	mov	r23, r22
 3f0:	6a 2f       	mov	r22, r26
 3f2:	11 24       	eor	r1, r1
 3f4:	9f 57       	subi	r25, 0x7F	; 127
 3f6:	50 40       	sbci	r21, 0x00	; 0
 3f8:	8a f0       	brmi	.+34     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fa:	e1 f0       	breq	.+56     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3fc:	88 23       	and	r24, r24
 3fe:	4a f0       	brmi	.+18     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 400:	ee 0f       	add	r30, r30
 402:	ff 1f       	adc	r31, r31
 404:	bb 1f       	adc	r27, r27
 406:	66 1f       	adc	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	91 50       	subi	r25, 0x01	; 1
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	a9 f7       	brne	.-22     	; 0x3fc <__mulsf3_pse+0x64>
 412:	9e 3f       	cpi	r25, 0xFE	; 254
 414:	51 05       	cpc	r21, r1
 416:	70 f0       	brcs	.+28     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 418:	14 c0       	rjmp	.+40     	; 0x442 <__fp_inf>
 41a:	a6 cf       	rjmp	.-180    	; 0x368 <__fp_szero>
 41c:	5f 3f       	cpi	r21, 0xFF	; 255
 41e:	ec f3       	brlt	.-6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 420:	98 3e       	cpi	r25, 0xE8	; 232
 422:	dc f3       	brlt	.-10     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 424:	86 95       	lsr	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b7 95       	ror	r27
 42c:	f7 95       	ror	r31
 42e:	e7 95       	ror	r30
 430:	9f 5f       	subi	r25, 0xFF	; 255
 432:	c1 f7       	brne	.-16     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 434:	fe 2b       	or	r31, r30
 436:	88 0f       	add	r24, r24
 438:	91 1d       	adc	r25, r1
 43a:	96 95       	lsr	r25
 43c:	87 95       	ror	r24
 43e:	97 f9       	bld	r25, 7
 440:	08 95       	ret

00000442 <__fp_inf>:
 442:	97 f9       	bld	r25, 7
 444:	9f 67       	ori	r25, 0x7F	; 127
 446:	80 e8       	ldi	r24, 0x80	; 128
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	08 95       	ret

0000044e <__fp_nan>:
 44e:	9f ef       	ldi	r25, 0xFF	; 255
 450:	80 ec       	ldi	r24, 0xC0	; 192
 452:	08 95       	ret

00000454 <__fp_pscA>:
 454:	00 24       	eor	r0, r0
 456:	0a 94       	dec	r0
 458:	16 16       	cp	r1, r22
 45a:	17 06       	cpc	r1, r23
 45c:	18 06       	cpc	r1, r24
 45e:	09 06       	cpc	r0, r25
 460:	08 95       	ret

00000462 <__fp_pscB>:
 462:	00 24       	eor	r0, r0
 464:	0a 94       	dec	r0
 466:	12 16       	cp	r1, r18
 468:	13 06       	cpc	r1, r19
 46a:	14 06       	cpc	r1, r20
 46c:	05 06       	cpc	r0, r21
 46e:	08 95       	ret

00000470 <__fp_round>:
 470:	09 2e       	mov	r0, r25
 472:	03 94       	inc	r0
 474:	00 0c       	add	r0, r0
 476:	11 f4       	brne	.+4      	; 0x47c <__fp_round+0xc>
 478:	88 23       	and	r24, r24
 47a:	52 f0       	brmi	.+20     	; 0x490 <__fp_round+0x20>
 47c:	bb 0f       	add	r27, r27
 47e:	40 f4       	brcc	.+16     	; 0x490 <__fp_round+0x20>
 480:	bf 2b       	or	r27, r31
 482:	11 f4       	brne	.+4      	; 0x488 <__fp_round+0x18>
 484:	60 ff       	sbrs	r22, 0
 486:	04 c0       	rjmp	.+8      	; 0x490 <__fp_round+0x20>
 488:	6f 5f       	subi	r22, 0xFF	; 255
 48a:	7f 4f       	sbci	r23, 0xFF	; 255
 48c:	8f 4f       	sbci	r24, 0xFF	; 255
 48e:	9f 4f       	sbci	r25, 0xFF	; 255
 490:	08 95       	ret

00000492 <_exit>:
 492:	f8 94       	cli

00000494 <__stop_program>:
 494:	ff cf       	rjmp	.-2      	; 0x494 <__stop_program>
